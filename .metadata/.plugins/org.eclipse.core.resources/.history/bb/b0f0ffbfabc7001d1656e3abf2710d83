package com.ezen.view;

import java.util.List;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.ezen.biz.dto.CartVO;
import com.ezen.biz.dto.MemberVO;
import com.ezen.biz.dto.OrderVO;
import com.ezen.biz.service.CartService;
import com.ezen.biz.service.OrderService;

@Controller
public class MypageController {

	@Autowired
	private CartService cartService;
	@Autowired
	private OrderService orderService;

	@PostMapping("/cart_insert")
	public String insertCart(CartVO vo, HttpSession session) {
		// 세션에 사용자 정보가 저정되어 있는지 확인

		MemberVO loginUser = (MemberVO) session.getAttribute("loginUser");
		if (loginUser == null) {// 로그인이 안된경우
			return "member/login";
		} else {
			vo.setId(loginUser.getId());
			cartService.insertCart(vo);
			return "redirect:cart_list";
		}
	}

	@GetMapping("/cart_list")
	public String listCart(HttpSession session, Model model) {
		MemberVO loginUser = (MemberVO) session.getAttribute("loginUser");

		if (loginUser == null) {
			return "member/login";
		} else {
			List<CartVO> cartList = cartService.getListCart(loginUser.getId());
			int totalAmount = 0;
			for (CartVO vo : cartList) {
				totalAmount += vo.getQuantity() * vo.getPrice2();
			}

			model.addAttribute("totalPrice", totalAmount);
			model.addAttribute("cartList", cartList);
			return "mypage/cartList";
		}
	}

	@PostMapping("/cart_delete")
	public String deleteCart(@RequestParam(value = "cseq") int[] cseq) {

		for (int i = 0; i < cseq.length; i++) {
			System.out.println(cseq[i] + ",");
			cartService.deleteCart(cseq[i]);
		}

		return "redirect:cart_list";
	}

	@PostMapping("/order_insert")
	public String insertOrder(HttpSession session,OrderVO order,Model model) {
		MemberVO loginUser = (MemberVO) session.getAttribute("loginUser");

		if (loginUser == null) {
			return "member/login";
		} else {
			order.setId(loginUser.getId());
			int oseq = orderService.insertOrder(order);
			
			model.addAttribute("oseq", oseq);
			return "redirect:order_list";
		}
	}
	
	@GetMapping("/order_list")
	public String listOrder(@RequestParam(value = "oseq") int oseq,OrderVO order,HttpSession session,Model model) {
		MemberVO loginUser = (MemberVO) session.getAttribute("loginUser");
		
		order.setId(loginUser.getId());
		order.setOseq(oseq);
		order.setResult("1");
		List<OrderVO> orderDetail = orderService.getListOrderById(order);
		model.addAttribute("orderList",orderDetail);
		
		return "mypage/orderDetail";
	}

}
