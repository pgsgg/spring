/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-23 04:06:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class productWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/D:/pgs/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShopMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/pgs/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShopMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/admin/product/../sub_menu.jsp", Long.valueOf(1679532976301L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1677822582287L));
    _jspx_dependants.put("/WEB-INF/views/admin/product/../header.jsp", Long.valueOf(1679532976275L));
    _jspx_dependants.put("/WEB-INF/views/admin/product/../footer.jsp", Long.valueOf(1679532976268L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Nonage Admin</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"admin/css/admin.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.2.min.js\" integrity=\"sha256-2krYZKh//PcchRtd+H+VyyQoZ/e3EcrkxhM8ycwASPA=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"admin/product/product.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"go_ab()\">  <!-- 페이지 로드시에 제품의 순매출 계산 -->\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		<header>			\r\n");
      out.write("			<div id=\"logo\">\r\n");
      out.write("				<a href=\"admin_login_form\"> \r\n");
      out.write("					<img style=\"width:800px\" src=\"admin/images/bar_01.gif\">\r\n");
      out.write("					<img src=\"admin/images/text.gif\">\r\n");
      out.write("				</a>\r\n");
      out.write("			</div>	\r\n");
      out.write("			<input class=\"btn\" type=\"button\"  value=\"logout\"  style=\"float: right;\"\r\n");
      out.write("			   onClick=\"location.href='admin_logout'\">			\r\n");
      out.write("		</header>\r\n");
      out.write("		<div class=\"clear\"></div>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<nav id=\"sub_menu\">\r\n");
      out.write("<h1>Admin Setting</h1>\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a href='admin_product_list'> 상품리스트</a></li>\r\n");
      out.write("<li><a href='admin_order_list'> 주문리스트</a></li>\r\n");
      out.write("<li><a href='admin_member_list'> 회원리스트</a></li>\r\n");
      out.write("<li><a href='admin_qna_list'> Q&amp;A리스트</a></li>\r\n");
      out.write("<li><a href='admin_sales_record_form'> 제품별 판매 실적</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<article>\r\n");
      out.write("<h1>상품등록</h1>  \r\n");
      out.write("<!-- [1] 파일을 업로드 하기 위해서는 폼태그를 post 방식으로 전송하고,\r\n");
      out.write("인코딩 타입을 multipart/form-data 로 지정해야 한다. -->\r\n");
      out.write("<form name=\"frm\" id=\"write_form\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("<table id=\"list\">\r\n");
      out.write("<tr>\r\n");
      out.write("  <th>상품분류</th>\r\n");
      out.write("  <td colspan=\"5\">\r\n");
      out.write("  <select name=\"kind\" id=\"kind\">\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  </select>      \r\n");
      out.write("<tr>\r\n");
      out.write("  <th>상품명</th>\r\n");
      out.write("  <td width=\"343\" colspan=\"5\">\r\n");
      out.write("       <input type=\"text\" name=\"name\" id=\"name\" size=\"47\" maxlength=\"100\" value=\"킬힐\">\r\n");
      out.write("  </td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("  <th>원가[A]</th>\r\n");
      out.write("  <td width=\"70\">\r\n");
      out.write("    <input type=\"text\" name=\"price1\" id=\"price1\" size=\"11\" onKeyUp='NumFormat(this)' value=\"10000\">\r\n");
      out.write("  </td>\r\n");
      out.write("  <th>판매가[B]</th>\r\n");
      out.write("  <td width=\"70\">\r\n");
      out.write("     <input type=\"text\" name=\"price2\" id=\"price2\" size=\"11\" onBlur=\"go_ab()\" onKeyUp='NumFormat(this)' value=\"20000\">\r\n");
      out.write("  </td>\r\n");
      out.write("  <th>[B-A]</th>\r\n");
      out.write("    <td width=\"72\">\r\n");
      out.write("      <input type=\"text\" name=\"price3\" id=\"price3\" size=\"11\" readonly onKeyUp='NumFormat(this)'>\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("    \r\n");
      out.write("  <tr>\r\n");
      out.write("    <th>상세설명</th>\r\n");
      out.write("    <td colspan=\"5\">\r\n");
      out.write("      <textarea name=\"content\" id=\"content\" rows=\"8\" cols=\"70\" >이뻐요</textarea>\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <th>상품이미지</th>\r\n");
      out.write("    <td width=\"343\" colspan=\"5\">\r\n");
      out.write("<!--  [2] 파일 업로드를 하기 위한 input 태그는 타입 속성 값을 file로 지정해야 한다.  -->\r\n");
      out.write("      <input type=\"file\" name=\"product_image\" id=\"product_image\">\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>    \r\n");
      out.write("</table>\r\n");
      out.write("<input class=\"btn\" type=\"button\" value=\"등록\" onClick=\"go_save()\">           \r\n");
      out.write("<input class=\"btn\" type=\"button\" value=\"취소\" onClick=\"go_mov()\">\r\n");
      out.write("</form> \r\n");
      out.write("</article>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"clear\"></div>\r\n");
      out.write("    \r\n");
      out.write("  <footer>  \r\n");
      out.write("    <hr>\r\n");
      out.write("    <div id=\"copy\">\r\n");
      out.write("     All contents Copyright 2013 Nonage Inc. all rights reserved<br>\r\n");
      out.write("     Contact mail : Nonage@Nonage.com Tel: +82 64 123 4315 \r\n");
      out.write("     Fax +82 64 123 4321\r\n");
      out.write("    </div>         \r\n");
      out.write("  </footer>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/admin/product/productWrite.jsp(17,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/admin/product/productWrite.jsp(17,4) '${kindList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${kindList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/admin/product/productWrite.jsp(17,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("kind");
      // /WEB-INF/views/admin/product/productWrite.jsp(17,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("      <option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${kind}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("   ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
