/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-27 03:20:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class salesRecords_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/admin/order/../footer.jsp", Long.valueOf(1679532976268L));
    _jspx_dependants.put("jar:file:/D:/pgs/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShopMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/pgs/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShopMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/admin/order/../header.jsp", Long.valueOf(1679532976275L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1677822582287L));
    _jspx_dependants.put("/WEB-INF/views/admin/order/../sub_menu.jsp", Long.valueOf(1679532976301L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Nonage Admin</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"admin/css/admin.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.2.min.js\" integrity=\"sha256-2krYZKh//PcchRtd+H+VyyQoZ/e3EcrkxhM8ycwASPA=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"admin/product/product.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"go_ab()\">  <!-- 페이지 로드시에 제품의 순매출 계산 -->\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		<header>			\r\n");
      out.write("			<div id=\"logo\">\r\n");
      out.write("				<a href=\"admin_login_form\"> \r\n");
      out.write("					<img style=\"width:800px\" src=\"admin/images/bar_01.gif\">\r\n");
      out.write("					<img src=\"admin/images/text.gif\">\r\n");
      out.write("				</a>\r\n");
      out.write("			</div>	\r\n");
      out.write("			<input class=\"btn\" type=\"button\"  value=\"logout\"  style=\"float: right;\"\r\n");
      out.write("			   onClick=\"location.href='admin_logout'\">			\r\n");
      out.write("		</header>\r\n");
      out.write("		<div class=\"clear\"></div>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<nav id=\"sub_menu\">\r\n");
      out.write("<h1>Admin Setting</h1>\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a href='admin_product_list'> 상품리스트</a></li>\r\n");
      out.write("<li><a href='admin_order_list'> 주문리스트</a></li>\r\n");
      out.write("<li><a href='admin_member_list'> 회원리스트</a></li>\r\n");
      out.write("<li><a href='admin_qna_list'> Q&amp;A리스트</a></li>\r\n");
      out.write("<li><a href='admin_sales_record_form'> 제품별 판매 실적</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type: 'GET',\r\n");
      out.write("		headers: {\r\n");
      out.write("			Accept: \"application/json; charset=utf-8\",\r\n");
      out.write("			\"Content-type\": \"application/json; charset=utf-8\"\r\n");
      out.write("		},\r\n");
      out.write("		url: 'sales_record_chart',\r\n");
      out.write("		success: function(result) {\r\n");
      out.write("			// 최신 버전의 구글 코어차트 패키지 로드해준다.\r\n");
      out.write("			google.charts.load('current', {'packages':['corechart']});\r\n");
      out.write("			\r\n");
      out.write("			// 차트API가 로드완료했을 때 실행할 콜벡함수 선언\r\n");
      out.write("			google.charts.setOnLoadCallback(function() {\r\n");
      out.write("				drawChart(result);\r\n");
      out.write("			});\r\n");
      out.write("		},\r\n");
      out.write("		error: function() {\r\n");
      out.write("			alert(\"Chart drawing error!\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function drawChart(result) {\r\n");
      out.write("		// 차트 그리는데 사용할 데이터 객체 생성\r\n");
      out.write("		var data = new google.visualization.DataTable();\r\n");
      out.write("		\r\n");
      out.write("		data.addColumn(\"string\", \"pname\");\r\n");
      out.write("		data.addColumn(\"number\", \"quantity\");\r\n");
      out.write("		\r\n");
      out.write("		// 콘트롤러에서 json타입으로 전달된 데이터를 \r\n");
      out.write("		// 자바스크립트의 배열로 저장\r\n");
      out.write("		var dataArray = [];\r\n");
      out.write("		$.each(result, function(i, obj){\r\n");
      out.write("			dataArray.push([obj.pname, obj.quantity]);\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		// data객체에 dataArray의 내용을 저장\r\n");
      out.write("		data.addRows(dataArray);\r\n");
      out.write("		\r\n");
      out.write("		// 파이차트 그리기\r\n");
      out.write("		var piechart_options = {\r\n");
      out.write("			title: '제품별 판매 실적', \r\n");
      out.write("			width: 300,\r\n");
      out.write("			height: 300\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		var piechart = new google.visualization.PieChart(document.getElementById('piechart_div'));\r\n");
      out.write("		\r\n");
      out.write("		piechart.draw(data, piechart_options);\r\n");
      out.write("		\r\n");
      out.write("		// 바차트 그리기\r\n");
      out.write("		var barchart_options = {\r\n");
      out.write("			title: '제품별 판매 실적',\r\n");
      out.write("			width: 300,\r\n");
      out.write("			height: 300\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		var barchart = new google.visualization.BarChart(document.getElementById('barchart_div'));\r\n");
      out.write("		\r\n");
      out.write("		barchart.draw(data, barchart_options);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("	<h1>제품 판매 실적</h1>\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><div id=\"piechart_div\" style=\"border:1px solid #ccc\"></div></td>\r\n");
      out.write("			<td><div id=\"barchart_div\" style=\"border:1px solid #ccc\"></div></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"clear\"></div>\r\n");
      out.write("    \r\n");
      out.write("  <footer>  \r\n");
      out.write("    <hr>\r\n");
      out.write("    <div id=\"copy\">\r\n");
      out.write("     All contents Copyright 2013 Nonage Inc. all rights reserved<br>\r\n");
      out.write("     Contact mail : Nonage@Nonage.com Tel: +82 64 123 4315 \r\n");
      out.write("     Fax +82 64 123 4321\r\n");
      out.write("    </div>         \r\n");
      out.write("  </footer>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
